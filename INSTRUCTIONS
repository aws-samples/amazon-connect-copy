PLEASE READ THE INSTRUCTIONS:
==============================

Amazon Connect Custom Migration Scripts
===========================================
Following are the bash scripts that are used for the migration of the Amazon Connect resources:
1. Folder: ac_migrate
a.	ac_set_env: This script is used to set up the environment. It will remove the older AWS CLI version, install the new AWS CLI version as well as set the environment path in Cloud9 environment. (Please use latest version of AWS CLI in your preferred environment to run bash scripts).
b.	ac_save: This script is used to export Amazon connect resources from the source and destination instances. The supported Amazon Connect resources are; Hours of operations, Queues, Routing Profiles, Contact flow modules and flows, and Quick Connects.

c.	ac_diff: This script finds the differences between Amazon Connect resources in the source and the destination instances after export from both instances is completed using “ac_save”.

d.	ac_copy: This script creates and updates the Amazon Connect resources in the destination instance.

e.	ac_delete: Used for testing - This script deletes newly created Contact flows, Modules and Quick Connects from the destination Amazon Connect instance. It leverages outputs generated by “ac_copy” script for deletion. Please note that at this time Queues and Routing Profiles cannot be deleted. Hours of operation also cannot be deleted as it has references in the queue.

f. Sub Folder: resources: This folder contains following resource files referenced in bash scripts.
i.	resourceMap: This file contains the mapping of Lambda function and Lex Bot from the source instance and destination instance.
E.g. 1. If Lambda function in the source instance is called “functionname-src-a” and corresponding Lambda function in the destination instance is called “functionname-dest-b”, then the file should have following entry:
lambda    functionname-src-a    functionname-dest-a

E.g. 2. If Lex bot name (Classic or v1) in the source instance is called “lexbot-src-a” and corresponding bot in the destination instance is called “lexbot-dest-b”, then the file should have following entry:
bot lexbot-src-a    lexbot-dest-b

E.g. 3. If Lex bot name (v2) in the source instance is called “lexbot-src-a:Aliasname-a” and corresponding bot in the destination instance is called “lexbot-dest-b:Aliasname-b”, then the file should have following entry:
bot lexbot-src-a:Aliasname-a   lexbot-dest-b:Aliasname-b

ii.	flowExceptions: This file contains collection of the search strings that are used to find the flow exceptions. If a search string is found in a flow JSON then that flow is not updated. The examples of such flows are an “Outbound whisper flow” where an instance’s claimed number is used to set as caller Id, or “Transfer to queue flow” where an instance’s claimed number is used to set as caller Id. Other examples are where a hard-coded Agent ARN is configured in a flow. A manual update is required for such flows. DO NOT UPDAT THIS FILE


====================================================================================
Prerequisites
====================================================================================
1.	An environment to execute bash scripts (e.g. AWS Cloud9)
2.	AWS IAM credentials for the source and destination account. The policies are listed in the section below.
3.	Latest version of AWS CLI
4.	Configuration of AWS CLI credentials
5.	All prompts that are used in the source account/instance should be created and preloaded in the destination account/instance.
6.	The “Default ….” out-of-the-box flows should exist as is in the destination instance when the instance was created, otherwise flow creation may fail.
7.	All the AWS Lambda functions and Amazon Lex Bot (Classic and V2) used by the contact flows in the source account/instance should be created and exist in the destination account/instance. Function/Bot names between source and destination instances can be different.
8.	The bash scripts use JSON parser, jq, for parsing and comparing JSON files. (https://stedolan.github.io/jq/)


====================================================================================
Create a resource mapping file as follows:
====================================================================================
a. Copy the ac_migrate.zip package on to your local machine and unzip the package
b. Navigate to folder “ac_migrate/resources”
c. Open file “resourceMap” and add the resource-type, name-in-source-account and name-in-destination-account. Please note that full ARN should not be added, only the name of the Lambda function or the Lex bot name. If the bot is of type V2 then add the name along with the bot alias with colon (:) in between. 
e.g. 
lambda    source-function-name-a     dest-function-name-a 
lambda    source-function-name-b     dest-function-name-b 
bot    source-bot-name-a   	dest-bot-name-a
bot    source-bot-name:bot-alias-name	dest-bot-name:bot-alias-name

====================================================================================
Scripts Usage:
====================================================================================
ac_save -s  source-instance-alias-name    src-profile-name (Do not use option "-G <flows-to-skip>" with "ac_save" script)
ac_save -s  dest-instance-alias-name    dest-profile-name  (Do not use option "-G <flows-to-skip>" with "ac_save" script)
ac_diff  source-instance-alias-name    dest-instance-alias-name    helper_dir
ac_copy [-d] helper_dir

====================================================================================
